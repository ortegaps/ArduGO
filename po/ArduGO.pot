# SOME DESCRIPTIVE TITLE.
# Copyright (C) YEAR THE PACKAGE'S COPYRIGHT HOLDER
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-01-15 04:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=CHARSET\n"
"Content-Transfer-Encoding: 8bit\n"

#: activity/activity.info:2
msgid "ArduGO"
msgstr ""

#: activity.py:113
msgid "Install Arduino"
msgstr ""

#: activity.py:115
msgid "Run Arduino"
msgstr ""

#: activity.py:117
msgid "What is Arduino"
msgstr ""

#: activity.py:119
msgid "Help"
msgstr ""

#: activity.py:157
msgid "Introduction on Arduino Board"
msgstr ""

#: activity.py:164
msgid ""
"\n"
"What is Arduino?\n"
"\n"
"Arduino is an open-source electronics platform based on easy-to-use hardware "
"and software.\n"
"Arduino boards are able to read inputs - light on a sensor, a finger on a "
"button, or a Twitter message - and turn it into an output - activating a "
"motor, turning on an LED, publishing something online.\n"
"You can tell your board what to do by sending a set of instructions to the "
"microcontroller on the board.\n"
"To do so you use the Arduino programming language (based on Wiring), and the "
"Arduino Software (IDE), based on Processing Over the years.\n"
"Arduino has been the brain of thousands of projects, from everyday objects "
"to complex scientific instruments.\n"
"A worldwide community of makers - students, hobbyists, artists, programmers, "
"and professionals - has gathered around this open-source platform,\n"
" their contributions have added up to an incredible amount ofaccessible "
"knowledge that can be of great help to novices and experts alike.\n"
"differentiating its offer from simple 8-bit boards to products for IoT "
"applications, wearable, 3D printing, and embedded environments. All Arduino "
"boards are completely open-source, empowering users to build them "
"independently and eventually adapt them to their particular needs. The "
"software, too, is open-source, and it is growing through the contributions "
"of users worldwide.\n"
"\n"
"Why Arduino?\n"
"\n"
"Thanks to its simple and accessible user experience, Arduino has been used "
"in thousands of different projects and applications.\n"
"The Arduino software is easy-to-use for beginners, yet flexible enough for "
"advanced users.\n"
"It runs on Mac, Windows, and Linux. Teachers and students use it to build "
"low cost scientific instruments, to prove chemistry and physics principles, "
"or to get started with programming and robotics.\n"
"Designers and architects build interactive prototypes, musicians and artists "
"use it for installations and to experiment with new musical instruments."
"Makers, of course, use it to build many of the projects exhibited at the "
"Maker Faire, for example.\n"
"Arduino is a key tool to learn new things. Anyone - children, hobbyists, "
"artists, programmers - can start tinkering just following the step by step "
"instructions of a kit, or sharing ideas online with other members of the "
"Arduino community.\n"
"There are many other microcontrollers and microcontroller platforms "
"available for physical computing. Parallax Basic Stamp, Netmedia's BX-24, "
"Phidgets, MIT's Handyboard, and many others offer similar functionality.\n"
"All of these tools take the messy details of microcontroller programming and "
"wrap it up in an easy-to-use package. Arduino also simplifies the process of "
"working with microcontrollers, but it offers some advantage for teachers, "
"students, and interested amateurs over other systems:\n"
"Inexpensive - Arduino boards are relatively inexpensive compared to other "
"microcontroller platforms.\n"
"The least expensive version of the Arduino module can be assembled by hand, "
"and even the pre-assembled Arduino modules cost less than $50\n"
"Cross-platform - The Arduino Software (IDE) runs on Windows, Macintosh OSX, "
"and Linux operating systems. Most microcontroller systems are limited to "
"Windows.\n"
"Simple, clear programming environment - The Arduino Software (IDE) is easy-"
"to-use for beginners, yet flexible enough for advanced users to take "
"advantage of as well.\n"
"For teachers, it's conveniently based on the Processing programming "
"environment, so students learning to program in that environment will be "
"familiar with how the Arduino IDE works.\n"
"Open source and extensible software - The Arduino software is published as "
"open source tools, available for extension by experienced programmers. \n"
"The language can be expanded through C++ libraries, and people wanting to "
"understand the technical details can make the leap from Arduino to the AVR C "
"programming language on which it's based.\n"
"Similarly, you can add AVR-C code directly into your Arduino programs if you "
"want to.Open source and extensible hardware - The plans of the Arduino "
"boards are published under a Creative Commons license, so experienced "
"circuit designers can make their own version of the module, extending it and "
"improving it. Even relatively inexperienced users can build the breadboard "
"version of the module in order to understand how it works and save money.\n"
"\n"
"How do I use Arduino?\n"
"\n"
"See the getting started guide. If you are looking for inspiration you can "
"find a great variety of Tutorials on Arduino Project Hub.\n"
"The text of the Arduino getting started guide is licensed under a Creative "
"Commons Attribution-ShareAlike 3.0 License. Code samples in the guide are "
"released into the public domain.\n"
"\n"
"Information from https://www.arduino.cc/en/Guide/Introduction"
msgstr ""

#: activity.py:209 activity.py:247 activity.py:280
msgid "Exit"
msgstr ""

#: activity.py:227
msgid "Help if you can not connect your arduino board"
msgstr ""

#: activity.py:234
msgid ""
"\n"
"If you can not connect your Arduino board, these could be some problems.\n"
"\n"
"Problem: The serial port can not establish connection to the board.\n"
"\n"
"Solution: Give permissions to the desired port for example :\n"
"<ACM0> entering the terminal and typing\n"
"\n"
"$ sudo chmod 777 /dev/ACM0\n"
"\n"
"or if you do not know which port you can give permissions to all ports with\n"
"\n"
"$ sudo chmod 777 /dev/*\n"
"\n"
"You may have selected your board appropriately, but with the wrong "
"microcontroller option. Make sure the microcontroller matches your board\n"
"(either ATmega8, ATmega168, ATmega328, or ATmega1280) - the name is written "
"on the largest chip on the board.\n"
"\n"
"Check if you use a noisy power supply. This could cause the chip to lose its "
"sketch.\n"
"\n"
"On the other hand, the sketch may be too large for the card. When you upload "
"your sketch, Arduino 0004 and later check if it is too large for the "
"ATmega8,\n"
"but base your calculation on a 1 Kb bootloader. You could have larger size "
"bulbs (eg 2 Kb of the 8 Kb available on your board) . If you use official "
"Arduino boards,\n"
"this problem will not occur.\n"
msgstr ""

#: activity.py:264
msgid "Steps to install Arduino IDE an pyserial on your XO"
msgstr ""

#: activity.py:271
msgid ""
"To install the Arduino IDE you must enter the Terminal Activity and type "
"these commands:\n"
"First step: To locate in the directory where the package to install is "
"located for that type\n"
"\n"
"$cd /home/olpc/Activities/ArduGO.activity/\n"
"\n"
"or some other location depending on how they are ripping Sugar.\n"
"\n"
"Second Step: Install the Arduino package on your system, for that you write "
"in the terminal:\n"
"\n"
"$sudo yum install -y arduino-1.0.5-6.fc20.noarch\n"
"\n"
"Third Step: Install the Pyserial package on your system, for that you write "
"in the terminal:\n"
"\n"
"$sudo yum install -y pyserial-2.7-1.fc20.noarch\n"
"\n"
"Then you can start IDE Arduino from the main menu :)"
msgstr ""
